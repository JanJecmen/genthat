func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(integer(0))
retn: expression()

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(expression())
retn: expression()

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(NULL)
retn: expression(NULL)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(expression(NULL))
retn: expression(NULL)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(list())
retn: expression()

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(1L)
retn: expression(1L)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(expression(1L))
retn: expression(1L)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(3.14159265358979)
retn: expression(3.14159265358979)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(expression(3.14159265358979))
retn: expression(3.14159265358979)

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list("1.3")
retn: expression("1.3")

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(expression("1.3"))
retn: expression("1.3")

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(structure(list(a = 1), .Names = "a"))
retn: structure(expression(a = 1), .Names = "a")

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(structure(expression(a = 1), .Names = "a"))
retn: structure(expression(a = 1), .Names = "a")

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(structure(list(`character(0)` = structure(integer(0), .Label = character(0), class = "factor")), .Names = "character(0)", row.names = character(0), class = "data.frame"))
retn: structure(expression(`character(0)` = integer(0)), .Names = "character(0)", row.names = character(0), class = "data.frame")

func: quote(as.expression)
body: function (x, ...) 
body: UseMethod("as.expression")
args: list(structure(expression(`character(0)` = integer(0)), .Names = "character(0)", row.names = character(0), class = "data.frame"))
retn: structure(expression(`character(0)` = integer(0)), .Names = "character(0)", row.names = character(0), class = "data.frame")

