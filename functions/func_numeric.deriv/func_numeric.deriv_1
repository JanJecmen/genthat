func: quote(numeric.deriv)
body: function (expr, theta, rho = sys.frame(sys.parent())) 
body: {
body:     eps <- sqrt(.Machine$double.eps)
body:     ans <- eval(substitute(expr), rho)
body:     grad <- matrix(, length(ans), length(theta), dimnames = list(NULL, theta))
body:     for (i in seq_along(theta)) {
body:         old <- get(theta[i], envir = rho)
body:         delta <- eps * min(1, abs(old))
body:         assign(theta[i], old + delta, envir = rho)
body:         ans1 <- eval(substitute(expr), rho)
body:         assign(theta[i], old, envir = rho)
body:         grad[, i] <- (ans1 - ans)/delta
body:     }
body:     attr(ans, "gradient") <- grad
body:     ans
body: }
args: list(c(0.9092974, -0.7568025, -0.2794155, 0.9893582, -0.5440211), c("x", "y"))
retn: structure(c(0.909297426825682, -0.756802495307928, -0.279415498198926, 0.989358246623382, -0.54402111088937), gradient = structure(c(-0.832293704152107, -2.61457439512014, 5.76102179288864, -1.16400074213743, -8.3907148912549, -0.416146844625473, -1.3072872236371, 2.88051087781787, -0.582000255584717, -4.19535754621029), .Dim = c(5L, 2L), .Dimnames = list(NULL, c("x", "y"))))

