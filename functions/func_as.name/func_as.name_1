func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("utils")
retn: quote(utils)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("methods")
retn: quote(methods)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("grDevices")
retn: quote(grDevices)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("graphics")
retn: quote(graphics)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("stats")
retn: quote(stats)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list(1L)
retn: quote(`1`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list(quote(`1`))
retn: quote(`1`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list(3.14159265358979)
retn: quote(`3.141593`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list(quote(`3.141593`))
retn: quote(`3.141593`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("1.3")
retn: quote(`1.3`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list(quote(`1.3`))
retn: quote(`1.3`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rbinom")
retn: quote(rbinom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pbinom")
retn: quote(pbinom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("binom")
retn: quote(binom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rpois")
retn: quote(rpois)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("ppois")
retn: quote(ppois)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pois")
retn: quote(pois)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rnbinom")
retn: quote(rnbinom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pnbinom")
retn: quote(pnbinom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("nbinom")
retn: quote(nbinom)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rnorm")
retn: quote(rnorm)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pnorm")
retn: quote(pnorm)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("norm")
retn: quote(norm)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rgamma")
retn: quote(rgamma)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pgamma")
retn: quote(pgamma)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("gamma")
retn: quote(gamma)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rhyper")
retn: quote(rhyper)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("phyper")
retn: quote(phyper)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("hyper")
retn: quote(hyper)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rsignrank")
retn: quote(rsignrank)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("psignrank")
retn: quote(psignrank)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("signrank")
retn: quote(signrank)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rwilcox")
retn: quote(rwilcox)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pwilcox")
retn: quote(pwilcox)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("wilcox")
retn: quote(wilcox)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rchisq")
retn: quote(rchisq)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pchisq")
retn: quote(pchisq)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("chisq")
retn: quote(chisq)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rlogis")
retn: quote(rlogis)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("plogis")
retn: quote(plogis)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("logis")
retn: quote(logis)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rt")
retn: quote(rt)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pt")
retn: quote(pt)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("t")
retn: quote(t)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rbeta")
retn: quote(rbeta)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pbeta")
retn: quote(pbeta)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("beta")
retn: quote(beta)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rcauchy")
retn: quote(rcauchy)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pcauchy")
retn: quote(pcauchy)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("cauchy")
retn: quote(cauchy)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rf")
retn: quote(rf)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pf")
retn: quote(pf)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("f")
retn: quote(f)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("rweibull")
retn: quote(rweibull)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("pweibull")
retn: quote(pweibull)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("weibull")
retn: quote(weibull)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("tools")
retn: quote(tools)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("!")
retn: quote(`!`)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("compiler")
retn: quote(compiler)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("KernSmooth")
retn: quote(KernSmooth)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("x")
retn: quote(x)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("grid")
retn: quote(grid)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("splines")
retn: quote(splines)

func: quote(as.name)
body: function (x) 
body: .Internal(as.vector(x, "symbol"))
args: list("stats4")
retn: quote(stats4)

