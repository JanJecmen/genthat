func: quote(pie)
body: function (x, labels = names(x), edges = 200, radius = 0.8, clockwise = FALSE, init.angle = if (clockwise) 90 else 0, density = NULL, angle = 45, col = NULL, border = NULL, lty = NULL, main = NULL, ...) 
body: {
body:     if (!is.numeric(x) || any(is.na(x) | x < 0)) 
body:         stop("'x' values must be positive.")
body:     if (is.null(labels)) 
body:         labels <- as.character(seq_along(x))
body:     else labels <- as.graphicsAnnot(labels)
body:     x <- c(0, cumsum(x)/sum(x))
body:     dx <- diff(x)
body:     nx <- length(dx)
body:     plot.new()
body:     pin <- par("pin")
body:     xlim <- ylim <- c(-1, 1)
body:     if (pin[1L] > pin[2L]) 
body:         xlim <- (pin[1L]/pin[2L]) * xlim
body:     else ylim <- (pin[2L]/pin[1L]) * ylim
body:     dev.hold()
body:     on.exit(dev.flush())
body:     plot.window(xlim, ylim, "", asp = 1)
body:     if (is.null(col)) 
body:         col <- if (is.null(density)) 
body:             c("white", "lightblue", "mistyrose", "lightcyan", "lavender", "cornsilk")
body:         else par("fg")
body:     if (!is.null(col)) 
body:         col <- rep_len(col, nx)
body:     if (!is.null(border)) 
body:         border <- rep_len(border, nx)
body:     if (!is.null(lty)) 
body:         lty <- rep_len(lty, nx)
body:     angle <- rep(angle, nx)
body:     if (!is.null(density)) 
body:         density <- rep_len(density, nx)
body:     twopi <- if (clockwise) 
body:         -2 * pi
body:     else 2 * pi
body:     t2xy <- function(t) {
body:         t2p <- twopi * t + init.angle * pi/180
body:         list(x = radius * cos(t2p), y = radius * sin(t2p))
body:     }
body:     for (i in 1L:nx) {
body:         n <- max(2, floor(edges * dx[i]))
body:         P <- t2xy(seq.int(x[i], x[i + 1], length.out = n))
body:         polygon(c(P$x, 0), c(P$y, 0), density = density[i], angle = angle[i], border = border[i], col = col[i], lty = lty[i])
body:         P <- t2xy(mean(x[i + 0:1]))
body:         lab <- as.character(labels[i])
body:         if (!is.na(lab) && nzchar(lab)) {
body:             lines(c(1, 1.05) * P$x, c(1, 1.05) * P$y)
body:             text(1.1 * P$x, 1.1 * P$y, labels[i], xpd = TRUE, adj = ifelse(P$x < 0, 1, 0), ...)
body:         }
body:     }
body:     title(main = main, ...)
body:     invisible(NULL)
body: }
args: list(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), col = c("#FF0000FF", "#FF4000FF", "#FF8000FF", "#FFBF00FF", "#FFFF00FF", "#BFFF00FF", "#80FF00FF", "#40FF00FF", "#00FF00FF", "#00FF40FF", "#00FF80FF", "#00FFBFFF", "#00FFFFFF", "#00BFFFFF", "#0080FFFF", "#0040FFFF", "#0000FFFF", "#4000FFFF", "#8000FFFF", "#BF00FFFF", "#FF00FFFF", "#FF00BFFF", "#FF0080FF", "#FF0040FF"), radius = 0.9)
retn: NULL

func: quote(pie)
body: function (x, labels = names(x), edges = 200, radius = 0.8, clockwise = FALSE, init.angle = if (clockwise) 90 else 0, density = NULL, angle = 45, col = NULL, border = NULL, lty = NULL, main = NULL, ...) 
body: {
body:     if (!is.numeric(x) || any(is.na(x) | x < 0)) 
body:         stop("'x' values must be positive.")
body:     if (is.null(labels)) 
body:         labels <- as.character(seq_along(x))
body:     else labels <- as.graphicsAnnot(labels)
body:     x <- c(0, cumsum(x)/sum(x))
body:     dx <- diff(x)
body:     nx <- length(dx)
body:     plot.new()
body:     pin <- par("pin")
body:     xlim <- ylim <- c(-1, 1)
body:     if (pin[1L] > pin[2L]) 
body:         xlim <- (pin[1L]/pin[2L]) * xlim
body:     else ylim <- (pin[2L]/pin[1L]) * ylim
body:     dev.hold()
body:     on.exit(dev.flush())
body:     plot.window(xlim, ylim, "", asp = 1)
body:     if (is.null(col)) 
body:         col <- if (is.null(density)) 
body:             c("white", "lightblue", "mistyrose", "lightcyan", "lavender", "cornsilk")
body:         else par("fg")
body:     if (!is.null(col)) 
body:         col <- rep_len(col, nx)
body:     if (!is.null(border)) 
body:         border <- rep_len(border, nx)
body:     if (!is.null(lty)) 
body:         lty <- rep_len(lty, nx)
body:     angle <- rep(angle, nx)
body:     if (!is.null(density)) 
body:         density <- rep_len(density, nx)
body:     twopi <- if (clockwise) 
body:         -2 * pi
body:     else 2 * pi
body:     t2xy <- function(t) {
body:         t2p <- twopi * t + init.angle * pi/180
body:         list(x = radius * cos(t2p), y = radius * sin(t2p))
body:     }
body:     for (i in 1L:nx) {
body:         n <- max(2, floor(edges * dx[i]))
body:         P <- t2xy(seq.int(x[i], x[i + 1], length.out = n))
body:         polygon(c(P$x, 0), c(P$y, 0), density = density[i], angle = angle[i], border = border[i], col = col[i], lty = lty[i])
body:         P <- t2xy(mean(x[i + 0:1]))
body:         lab <- as.character(labels[i])
body:         if (!is.na(lab) && nzchar(lab)) {
body:             lines(c(1, 1.05) * P$x, c(1, 1.05) * P$y)
body:             text(1.1 * P$x, 1.1 * P$y, labels[i], xpd = TRUE, adj = ifelse(P$x < 0, 1, 0), ...)
body:         }
body:     }
body:     title(main = main, ...)
body:     invisible(NULL)
body: }
args: list(structure(c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12), .Names = c("Blueberry", "Cherry", "Apple", "Boston Cream", "Other", "Vanilla Cream")), col = c("purple", "violetred1", "green3", "cornsilk", "cyan", "white"))
retn: NULL

