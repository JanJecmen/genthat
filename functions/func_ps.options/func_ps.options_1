func: quote(ps.options)
body: function (..., reset = FALSE, override.check = FALSE) 
body: {
body:     initPSandPDFfonts()
body:     old <- get(".PostScript.Options", envir = .PSenv)
body:     if (reset) {
body:         assign(".PostScript.Options", get(".PostScript.Options.default", envir = .PSenv), envir = .PSenv)
body:     }
body:     l... <- length(new <- list(...))
body:     if (m <- match("append", names(new), 0L)) {
body:         warning("argument 'append' is for back-compatibility and will be ignored", immediate. = TRUE)
body:         new <- new[-m]
body:     }
body:     check.options(new, name.opt = ".PostScript.Options", envir = .PSenv, assign.opt = l... > 0, override.check = override.check)
body:     if (reset || l... > 0) 
body:         invisible(old)
body:     else old
body: }
args: list(width = 7, height = 7, onefile = FALSE, horizontal = FALSE, paper = "special")
retn: structure(list(onefile = TRUE, family = "Helvetica", title = "R Graphics Output", fonts = NULL, encoding = "default", bg = "transparent", fg = "black", width = 0, height = 0, horizontal = TRUE, pointsize = 12, paper = "default", pagecentre = TRUE, print.it = FALSE, command = "default", colormodel = "srgb", useKerning = TRUE, fillOddEven = FALSE), .Names = c("onefile", "family", "title", "fonts", "encoding", "bg", "fg", "width", "height", "horizontal", "pointsize", "paper", "pagecentre", "print.it", 
retn: "command", "colormodel", "useKerning", "fillOddEven"))

func: quote(ps.options)
body: function (..., reset = FALSE, override.check = FALSE) 
body: {
body:     initPSandPDFfonts()
body:     old <- get(".PostScript.Options", envir = .PSenv)
body:     if (reset) {
body:         assign(".PostScript.Options", get(".PostScript.Options.default", envir = .PSenv), envir = .PSenv)
body:     }
body:     l... <- length(new <- list(...))
body:     if (m <- match("append", names(new), 0L)) {
body:         warning("argument 'append' is for back-compatibility and will be ignored", immediate. = TRUE)
body:         new <- new[-m]
body:     }
body:     check.options(new, name.opt = ".PostScript.Options", envir = .PSenv, assign.opt = l... > 0, override.check = override.check)
body:     if (reset || l... > 0) 
body:         invisible(old)
body:     else old
body: }
args: list(width = 0, height = 0, onefile = TRUE, horizontal = TRUE, paper = "default")
retn: structure(list(onefile = FALSE, family = "Helvetica", title = "R Graphics Output", fonts = NULL, encoding = "default", bg = "transparent", fg = "black", width = 7, height = 7, horizontal = FALSE, pointsize = 12, paper = "special", pagecentre = TRUE, print.it = FALSE, command = "default", colormodel = "srgb", useKerning = TRUE, fillOddEven = FALSE), .Names = c("onefile", "family", "title", "fonts", "encoding", "bg", "fg", "width", "height", "horizontal", "pointsize", "paper", "pagecentre", "print.it", 
retn: "command", "colormodel", "useKerning", "fillOddEven"))

