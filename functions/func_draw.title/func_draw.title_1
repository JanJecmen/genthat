func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("Sample 'a' for each available font", 0, 23, 1)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("Symbol (incl. Greek) Escape Sequences", 0, 25, 6)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("ISO Latin-1 Escape Sequences", 0, 25, 4)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("Special Escape Sequences", 0, 25, 2)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("Cyrillic Octal Codes", i = 0, 25, 3)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("Raw Hershey Escape Sequences", i = 0, 25, 3)
retn: NULL

func: quote(draw.title)
body: function (title, i = 0, nr, nc) 
body: {
body:     r <- get.r(i, nr)
body:     c <- get.c(i, nr)
body:     text((nc * 2 + 1)/2, 0, title, font = 2)
body: }
args: list("More Raw Hershey Escape Sequences", i = 0, 25, 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Hiragana : \\\\#J24nn", 4)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Katakana : \\\\#J25nn", 4)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (1)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (2)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (3)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (4)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (5)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (6)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (7)", 3)
retn: NULL

func: quote(draw.title)
body: function (title, nc) 
body: text((nc * (10%/%nc) + 1)/2, 0, title, font = 2)
args: list("Kanji (8)", 3)
retn: NULL

