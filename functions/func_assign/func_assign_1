func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x29c3260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x29c3260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x29d2480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x29d2480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x29f0450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x29f0450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x2780c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x2780c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x2780c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x2780c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2a9a010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2a9a010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2a9a030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2a9a030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x2a8b580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x2a8b580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2c32150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2c32150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x29ef7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x29ef7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2a99720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2a99720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x29cec30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x29cec30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x2a145b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x2a145b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x2a145d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x2a145d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x2aa59a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x2aa59a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x2aa59c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x2aa59c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2c32020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2c32020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2c32040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2c32040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x29d8af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x29d8af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2a8b5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2a8b5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2a45af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2a45af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x29cec10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x29cec10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".Autoloaded", NULL, envir = <environment>)
retn: NULL

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".popath", "/home/roman/r-instrumented/library/translations", <environment>)
retn: "/home/roman/r-instrumented/library/translations"

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("x", c(10.4, 5.6, 3.1, 6.4, 21.7))
retn: c(10.4, 5.6, 3.1, 6.4, 21.7)

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1d59250>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1d59250>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1d68470>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1d68470>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1d86440>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1d86440>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1b16c40>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1b16c40>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1b16c60>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1b16c60>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1e30000>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1e30000>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1e30020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1e30020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1e21570>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1e21570>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1fc8140>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1fc8140>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1d857e0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1d857e0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e2f710>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e2f710>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1d64c20>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1d64c20>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1daa5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1daa5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1daa5c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1daa5c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1e3b990>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1e3b990>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1e3b9b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1e3b9b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1fc8010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1fc8010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1fc8030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1fc8030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1d6eae0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1d6eae0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1e21590>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1e21590>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ddbae0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ddbae0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1d64c00>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1d64c00>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("x", 1.00000001490116, envir = <environment>)
retn: 1.00000001490116

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("x", 1, envir = <environment>)
retn: 1

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("y", 2.00000001490116, envir = <environment>)
retn: 2.00000001490116

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("y", 2, envir = <environment>)
retn: 2

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1daf260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1daf260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1dbe480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1dbe480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1ddc450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1ddc450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1b6cc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1b6cc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1b6cc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1b6cc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1e86010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1e86010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1e86030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1e86030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1e77580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1e77580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x201e150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x201e150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ddb7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ddb7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e85720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e85720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1dbac30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1dbac30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1e005b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1e005b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1e005d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1e005d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1e919a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1e919a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1e919c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1e919c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x201e020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x201e020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x201e040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x201e040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1dc4af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1dc4af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1e775a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1e775a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e31af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e31af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1dbac10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1dbac10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1515260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1515260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1524480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1524480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1542450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1542450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x12d2c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x12d2c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x12d2c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x12d2c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x15ec010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x15ec010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x15ec030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x15ec030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x15dd580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x15dd580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1784150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1784150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x15417f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x15417f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x15eb720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x15eb720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1520c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1520c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x15665b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x15665b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x15665d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x15665d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x15f79a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x15f79a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x15f79c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x15f79c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1784020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1784020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1784040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1784040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x152aaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x152aaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x15dd5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x15dd5a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1597af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1597af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1520c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1520c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1e09260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1e09260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1e18480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1e18480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1e36450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1e36450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1bc6c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1bc6c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1bc6c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1bc6c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1ee0010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1ee0010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1ee0030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1ee0030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1ed1580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1ed1580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2078150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2078150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e357f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e357f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1edf720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1edf720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1e14c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1e14c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1e5a5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1e5a5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1e5a5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1e5a5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1eeb9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1eeb9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1eeb9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1eeb9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2078020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2078020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2078040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2078040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1e1eaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1e1eaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1ed15a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1ed15a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e8baf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1e8baf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e14c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1e14c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x2640260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x2640260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x264f480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x264f480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x266d450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x266d450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x23fdc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x23fdc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x23fdc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x23fdc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2717010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2717010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2717030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2717030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x2708580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x2708580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x28af150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x28af150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x266c7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x266c7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2716720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2716720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x264bc30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x264bc30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x26915b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x26915b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x26915d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x26915d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x27229a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x27229a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x27229c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x27229c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x28af020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x28af020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x28af040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x28af040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x2655af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x2655af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x27085a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x27085a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x26c2af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x26c2af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x264bc10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x264bc10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x2b2f260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x2b2f260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x2b3e480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x2b3e480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x2b5c450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x2b5c450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x28ecc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x28ecc50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x28ecc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x28ecc70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2c06010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2c06010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2c06030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2c06030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x2bf7580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x2bf7580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2d9e150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2d9e150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2b5b7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2b5b7f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2c05720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2c05720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x2b3ac30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x2b3ac30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x2b805b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x2b805b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x2b805d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x2b805d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x2c119a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x2c119a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x2c119c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x2c119c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2d9e020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2d9e020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2d9e040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2d9e040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x2b44af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x2b44af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2bf75a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2bf75a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2bb1af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x2bb1af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2b3ac10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x2b3ac10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1e9a260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1e9a260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1ea9480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1ea9480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1ec7450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1ec7450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1c57c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1c57c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1c57c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1c57c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1f71010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1f71010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1f71030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1f71030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1f62580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1f62580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x2109150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x2109150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ec67f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1ec67f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1f70720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1f70720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1ea5c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1ea5c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1eeb5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1eeb5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1eeb5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1eeb5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1f7c9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1f7c9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1f7c9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1f7c9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x2109020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x2109020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x2109040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x2109040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1eafaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1eafaf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1f625a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1f625a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1f1caf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1f1caf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1ea5c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1ea5c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list("!.testit", function (x) 
args: "OK", <environment>)
retn: function (x) 
retn: "OK"

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1820200>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1820200>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x182f420>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x182f420>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x184d3f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x184d3f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x18f70d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x18f70d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x18f70f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x18f70f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x182bbb0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x182bbb0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x182bbd0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x182bbd0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1a8eef0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1a8eef0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x184c790>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x184c790>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1902a80>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1902a80>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x18f68c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x18f68c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1871570>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1871570>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1835a90>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1835a90>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1835ab0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1835ab0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x18f63e0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x18f63e0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x18f6400>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x18f6400>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x18f6420>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x18f6420>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1821330>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1821330>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1821350>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1821350>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1a8ef10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1a8ef10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x18a2a90>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x18a2a90>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1871550>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1871550>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1c8b260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1c8b260>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1c9a480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1c9a480>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1cb8450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1cb8450>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1a48c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1a48c50>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1a48c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1a48c70>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1d62010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1d62010>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1d62030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1d62030>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1d53580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1d53580>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1efa150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1efa150>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1cb77f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1cb77f0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1d61720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1d61720>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dchdc", structure(list(name = "dchdc", address = <pointer: 0x1c96c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dchdc", address = <pointer: 0x1c96c30>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrcf", structure(list(name = "dqrcf", address = <pointer: 0x1cdc5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrcf", address = <pointer: 0x1cdc5b0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 8L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrdc2", structure(list(name = "dqrdc2", address = <pointer: 0x1cdc5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrdc2", address = <pointer: 0x1cdc5d0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 9L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqty", structure(list(name = "dqrqty", address = <pointer: 0x1d6d9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqty", address = <pointer: 0x1d6d9a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrqy", structure(list(name = "dqrqy", address = <pointer: 0x1d6d9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrqy", address = <pointer: 0x1d6d9c0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrrsd", structure(list(name = "dqrrsd", address = <pointer: 0x1efa020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrrsd", address = <pointer: 0x1efa020>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dqrxb", structure(list(name = "dqrxb", address = <pointer: 0x1efa040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dqrxb", address = <pointer: 0x1efa040>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 7L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".F_dtrco", structure(list(name = "dtrco", address = <pointer: 0x1ca0af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "dtrco", address = <pointer: 0x1ca0af0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 6L), class = c("FortranRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_addTaskCallback", structure(list(name = "R_addTaskCallback", address = <pointer: 0x1d535a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_addTaskCallback", address = <pointer: 0x1d535a0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 4L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_getTaskCallbackNames", structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1d0daf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_getTaskCallbackNames", address = <pointer: 0x1d0daf0>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 0L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

func: quote(assign)
body: function (x, value, pos = -1, envir = as.environment(pos), inherits = FALSE, immediate = TRUE) 
body: .Internal(assign(x, value, envir, inherits))
args: list(".C_R_removeTaskCallback", structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1c96c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters")), envir = <environment>)
retn: structure(list(name = "R_removeTaskCallback", address = <pointer: 0x1c96c10>, dll = structure(list(name = "base", path = "base", dynamicLookup = FALSE, handle = <pointer: (nil)>, info = <pointer: 0x92df60>), .Names = c("name", "path", "dynamicLookup", "handle", "info"), class = "DLLInfo"), numParameters = 1L), class = c("CallRoutine", "NativeSymbolInfo"), .Names = c("name", "address", "dll", "numParameters"))

