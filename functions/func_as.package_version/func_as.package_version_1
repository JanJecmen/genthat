func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(integer(0))
retn: structure(list(), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(structure(list(), class = c("package_version", "numeric_version")))
retn: structure(list(), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(NULL)
retn: structure(list(), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(list())
retn: structure(list(), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(3.14159265358979)
retn: structure(list(c(3L, 2147483647L)), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(structure(list(c(3L, 2147483647L)), class = c("package_version", "numeric_version")))
retn: structure(list(c(3L, 2147483647L)), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list("1.3")
retn: structure(list(c(1L, 3L)), class = c("package_version", "numeric_version"))

func: quote(as.package_version)
body: function (x) 
body: if (is.package_version(x)) x else package_version(x)
args: list(structure(list(c(1L, 3L)), class = c("package_version", "numeric_version")))
retn: structure(list(c(1L, 3L)), class = c("package_version", "numeric_version"))

