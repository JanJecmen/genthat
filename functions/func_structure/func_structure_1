func: quote(structure)
body: function (.Data, ...) 
body: {
body:     attrib <- list(...)
body:     if (length(attrib)) {
body:         specials <- c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")
body:         replace <- c("dim", "dimnames", "names", "tsp", "levels")
body:         m <- match(names(attrib), specials)
body:         ok <- (!is.na(m) & m)
body:         names(attrib)[ok] <- replace[m[ok]]
body:         if ("factor" %in% attrib[["class", exact = TRUE]] && typeof(.Data) == "double") 
body:             storage.mode(.Data) <- "integer"
body:         attributes(.Data) <- c(attributes(.Data), attrib)
body:     }
body:     return(.Data)
body: }
args: list(structure(list(platform = "x86_64-unknown-linux-gnu", arch = "x86_64", os = "linux-gnu", system = "x86_64, linux-gnu", status = "", major = "3", minor = "0.1", year = "2013", month = "05", day = "16", `svn rev` = "62743", language = "R", version.string = "R version 3.0.1 (2013-05-16)", nickname = "Good Sport"), .Names = c("platform", "arch", "os", "system", "status", "major", "minor", "year", "month", "day", "svn rev", "language", "version.string", "nickname")), class = "simple.list")
retn: structure(list(platform = "x86_64-unknown-linux-gnu", arch = "x86_64", os = "linux-gnu", system = "x86_64, linux-gnu", status = "", major = "3", minor = "0.1", year = "2013", month = "05", day = "16", `svn rev` = "62743", language = "R", version.string = "R version 3.0.1 (2013-05-16)", nickname = "Good Sport"), .Names = c("platform", "arch", "os", "system", "status", "major", "minor", "year", "month", "day", "svn rev", "language", "version.string", "nickname"), class = "simple.list")

func: quote(structure)
body: function (.Data, ...) 
body: {
body:     attrib <- list(...)
body:     if (length(attrib)) {
body:         specials <- c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")
body:         replace <- c("dim", "dimnames", "names", "tsp", "levels")
body:         m <- match(names(attrib), specials)
body:         ok <- (!is.na(m) & m)
body:         names(attrib)[ok] <- replace[m[ok]]
body:         if ("factor" %in% attrib[["class", exact = TRUE]] && typeof(.Data) == "double") 
body:             storage.mode(.Data) <- "integer"
body:         attributes(.Data) <- c(attributes(.Data), attrib)
body:     }
body:     return(.Data)
body: }
args: list(3.14159265358979, class = "testit")
retn: structure(3.14159265358979, class = "testit")

func: quote(structure)
body: function (.Data, ...) 
body: {
body:     attrib <- list(...)
body:     if (length(attrib)) {
body:         specials <- c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")
body:         replace <- c("dim", "dimnames", "names", "tsp", "levels")
body:         m <- match(names(attrib), specials)
body:         ok <- (!is.na(m) & m)
body:         names(attrib)[ok] <- replace[m[ok]]
body:         if ("factor" %in% attrib[["class", exact = TRUE]] && typeof(.Data) == "double") 
body:             storage.mode(.Data) <- "integer"
body:         attributes(.Data) <- c(attributes(.Data), attrib)
body:     }
body:     return(.Data)
body: }
args: list("OK", class = "testOK")
retn: structure("OK", class = "testOK")

