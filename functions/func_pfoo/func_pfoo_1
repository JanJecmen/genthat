func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(0, 1), size = 1, prob = 0.2)
retn: c(0.8, 1)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(0, 1, 2), size = 2, prob = 0.2)
retn: c(0.64, 0.96, 1)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36), size = 100, prob = 0.2)
retn: c(7.79636020541295e-05, 0.00027698690065619, 0.000855398362218431, 0.00233356098621082, 0.00569638095579351, 0.0125748763481217, 0.025328753221397, 0.0469122371607858, 0.0804437211380508, 0.128505514838797, 0.192337584597601, 0.271188964887888, 0.362087083833635, 0.460161370064573, 0.559461584873397, 0.654033218024658, 0.738932752330905, 0.810912792286201, 0.868646782667011, 0.912524615356427, 0.944167283161294, 0.965848370360925, 0.979979793267828, 0.988751021279008, 0.993940664518957, 0.996870301831831, 
retn: 0.998449559445802, 0.999263116398454, 0.999663912838364, 0.999852859731464, 0.999938148259599)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(1826, 1861, 1867, 1869, 1878, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 
args: 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 
args: 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2112, 2113, 2114, 2115, 2118, 2119, 2120, 2123, 2125, 2126, 2127, 2128, 2137, 2143, 2149, 2170
args: ), size = 10000, prob = 0.2)
retn: c(5.82541677688234e-06, 0.000240649805826812, 0.000421485773201419, 0.000505543484324398, 0.00111144305564471, 0.0012093951072921, 0.00155245703079527, 0.00168515800640786, 0.0018280897764513, 0.00198194047216386, 0.00214743601772421, 0.00232534153662679, 0.00251646275946269, 0.00272164742855277, 0.0029417866945567, 0.00317781649985706, 0.00343071894319488, 0.00370152361971141, 0.00399130893023403, 0.00430120335333382, 0.00463238667337916, 0.00498609115751819, 0.00536360267424356, 0.00576626174592718, 
retn: 0.00619546452746789, 0.00665266370296494, 0.00713936929212773, 0.0076571493579501, 0.00820763060702627, 0.00879249887376127, 0.00941349947964008, 0.0100724374586625, 0.0107711776400341, 0.0115116445792246, 0.012295822328569, 0.013125754038694, 0.0140035413822089, 0.0149313437912978, 0.0159113775011074, 0.0169459143911229, 0.0180372806170854, 0.0191878550264073, 0.0204000673505145, 0.021676396168054, 0.0230193666334884, 0.0244315479662201, 0.0259155506960769, 0.0274740236617276, 0.0291096507593834, 
retn: 0.0308251474399895, 0.0326232569539946, 0.0345067463437296, 0.0364784021844108, 0.0385410260758022, 0.0406974298876439, 0.0429504307630406, 0.0453028458851393, 0.0477574870135783, 0.050317154798366, 0.0529846328800319, 0.0557626817861059, 0.0586540326351748, 0.0616613806609798, 0.0647873785702157, 0.0680346297488697, 0.0714056813330986, 0.0749030171617932, 0.078529050629063, 0.0822861174559395, 0.0861764684016102, 0.0902022619354459, 0.0943655568919832, 0.098668305131844, 0.103112344232326, 0.107699390232068, 
retn: 0.112431030454763, 0.117308716437406, 0.122333756988906, 0.12750731140522, 0.132830382867326, 0.13830381204839, 0.143928270956473, 0.149704257038918, 0.155632087574271, 0.161711894377176, 0.167943618841143, 0.174327007343414, 0.180861607035373, 0.187546762041008, 0.194381610084938, 0.201365079570311, 0.20849588712566, 0.215772535638379, 0.223193312791014, 0.230756290114975, 0.238459322574565, 0.246300048692471, 0.254275891225993, 0.262384058401345, 0.270621545711393, 0.278985138280109, 0.287471413794952, 
retn: 0.296076746006224, 0.30479730879031, 0.313629080771516, 0.322567850495049, 0.331609222141494, 0.340748621770993, 0.349981304083203, 0.359302359676991, 0.368706722791821, 0.378189179510775, 0.387744376403252, 0.39736682958356, 0.407050934159872, 0.416790974046393, 0.426581132110042, 0.436415500621545, 0.446288091979569, 0.456192849675352, 0.466123659464272, 0.476074360709955, 0.48603875786576, 0.496010632057951, 0.505983752734416, 0.515951889342577, 0.525908823000005, 0.535848358121336, 0.545764333965308, 
retn: 0.555650636066107, 0.56550120751375, 0.575310060048934, 0.585071284938591, 0.594779063599384, 0.604427677937494, 0.614011520374279, 0.623525103528786, 0.632963069529557, 0.642320198929775, 0.651591419201504, 0.660771812786543, 0.66985662468329, 0.678841269550948, 0.687721338314401, 0.696492604255132, 0.705151028575647, 0.713692765426956, 0.72211416639084, 0.730411784410713, 0.738582377167073, 0.746622909895598, 0.754530557648097, 0.762302706998524, 0.769936957198329, 0.777431120787324, 0.784783223668206, 
retn: 0.791991504654643, 0.799054414504609, 0.805970614452332, 0.812738974253753, 0.819358569761897, 0.825828680049925, 0.832148784100902, 0.838318557084458, 0.844337866241576, 0.850206766399669, 0.855925495140885, 0.861494467647322, 0.866914271247336, 0.872185659687643, 0.877309547156197, 0.882287002081072, 0.887119240730673, 0.891807620640583, 0.896353633892254, 0.900758900268507, 0.905025160310519, 0.909154268300523, 0.913148185193971, 0.917008971524303, 0.920738780302816, 0.924339849935352, 0.927814497176755, 
retn: 0.93116511014315, 0.934394141401177, 0.937504101152357, 0.940497550529736, 0.943377095022906, 0.946145378046438, 0.948805074665658, 0.951358885492559, 0.95380953076356, 0.956159744609648, 0.95841226952835, 0.960569851065817, 0.962635232716241, 0.964611151044693, 0.966500331038418, 0.968305481690571, 0.970029291819361, 0.971674426124596, 0.973243521482645, 0.974739183479978, 0.976163983184507, 0.977520454153207, 0.978811089673641, 0.98003834023636, 0.981204611234393, 0.982312260885475, 0.983363598372043, 
retn: 0.984360882193492, 0.985306318724752, 0.986202060974735, 0.987050207537907, 0.987852801731837, 0.988611830913327, 0.989329225965479, 0.990006860947851, 0.990646552901721, 0.991250061802353, 0.991819090650098, 0.992355285692131, 0.992860236766629, 0.993335477761233, 0.993782487177704, 0.994202688794806, 0.994597452421528, 0.994968094732971, 0.995315880181339, 0.995642021974726, 0.995947683116557, 0.996233977498808, 0.996501971042346, 0.996752682878003, 0.996987086562264, 0.997410643320691, 0.997601526946803, 
retn: 0.997779566109427, 0.99794552554636, 0.998378012820889, 0.998502563134061, 0.998618315612612, 0.998918207503635, 0.999083579825107, 0.999157232413125, 0.999225396550178, 0.99928844357215, 0.999676788276349, 0.999813751107142, 0.999894815313171, 0.999987854700036)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(0, 1), size = 1, prob = 0.8)
retn: c(0.2, 1)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94), size = 100, prob = 0.8)
retn: c(0.000147140268536092, 0.000336087161636224, 0.000736883601545599, 0.00155044055419746, 0.00312969816816873, 0.00605933548104296, 0.0112489787209916, 0.0200202067321724, 0.0341516296390748, 0.0558327168387059, 0.0874753846435729, 0.131353217332988, 0.189087207713799, 0.261067247669095, 0.345966781975341, 0.440538415126602, 0.539838629935425, 0.637912916166364, 0.728811035112111, 0.807662415402398, 0.871494485161203, 0.919556278861949, 0.953087762839214, 0.974671246778603, 0.987425123651878, 0.994303619044206, 
retn: 0.997666439013789, 0.999144601637782, 0.999723013099344, 0.999922036397946, 0.9999813199337)

func: quote(pfoo)
body: function (q, size, prob, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_pbinom, q, size, prob, lower.tail, log.p)
args: list(c(97, 98, 99, 100), size = 100, prob = 0.999)
retn: c(0.000150376365854212, 0.00463806839042419, 0.0952078528862911, 1)

func: quote(pfoo)
body: function (q, lambda, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_ppois, q, lambda, lower.tail, log.p)
args: list(c(0, 1, 2, 3), lambda = 0.095)
retn: c(0.909372934468231, 0.995763363242713, 0.999866908609501, 0.999996854212783)

func: quote(pfoo)
body: function (q, lambda, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_ppois, q, lambda, lower.tail, log.p)
args: list(c(0, 1, 2, 3, 4, 5, 6), lambda = 0.95)
retn: c(0.386741023454501, 0.754144995736277, 0.928661882570121, 0.983925563400838, 0.997050687598134, 0.99954446119562, 0.999939308681888)

func: quote(pfoo)
body: function (q, lambda, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_ppois, q, lambda, lower.tail, log.p)
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23), lambda = 9.5)
retn: c(7.48518298877006e-05, 0.000785944213820856, 0.00416363303750334, 0.0148596476458312, 0.04026268234061, 0.0885284482606895, 0.164949244300816, 0.268663181783844, 0.39182348254494, 0.521826022237207, 0.645328434944862, 0.751989609556018, 0.836429706123183, 0.89813593053765, 0.940008011390324, 0.966526995930351, 0.982272643000992, 0.99107168106988, 0.995715617828459, 0.998037586207749, 0.999140521187912, 0.999639467964652, 0.999854922254608, 0.999943914243938)

func: quote(pfoo)
body: function (q, lambda, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_ppois, q, lambda, lower.tail, log.p)
args: list(c(63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134), lambda = 95)
retn: c(0.000310085719560879, 0.000473360105969514, 0.000711991901489829, 0.00105547706170846, 0.00154250825903339, 0.00222291949059027, 0.00315971756302366, 0.00443108637561186, 0.00613221366006083, 0.00837675660481984, 0.0112977371493694, 0.0150476446052098, 0.019797527382608, 0.0257348808543554, 0.0330601870857324, 0.0419820344188192, 0.0527108381737974, 0.065451292632834, 0.080393800948988, 0.0977052435103859, 0.117519545237287, 0.139928576952235, 0.16497396533953, 0.192640382744099, 0.222850838530698, 
retn: 0.255464398754868, 0.290276625960442, 0.327022865788548, 0.365384324949758, 0.404996701257529, 0.445460956625681, 0.486355682795623, 0.527250408965565, 0.56771914840457, 0.607353480844832, 0.645774517394066, 0.6826431888302, 0.717668426694527, 0.750612957358993, 0.781296588860211, 0.809597025681724, 0.835448386239836, 0.85883771245908, 0.879799844448025, 0.898411083129799, 0.914782080118396, 0.929050380246073, 0.941373003083611, 0.951919391998622, 0.960864989739033, 0.96838562500752, 0.974652821064593, 
retn: 0.979830069981305, 0.984070058318267, 0.987512783891014, 0.990284469733481, 0.99249716011192, 0.994248873328184, 0.995624185357483, 0.996695125052429, 0.997522273597305, 0.998155976111525, 0.998637590022332, 0.999272338015016, 0.999473935728768, 0.999622399161376, 0.999809569443119, 0.999906639423164, 0.999935313702095)

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39), size = 1, prob = 0.2)
retn: c(0.2, 0.36, 0.488, 0.5904, 0.67232, 0.737856, 0.7902848, 0.83222784, 0.865782272, 0.8926258176, 0.91410065408, 0.931280523264, 0.9450244186112, 0.95601953488896, 0.964815627911168, 0.971852502328934, 0.977482001863147, 0.981985601490518, 0.985588481192414, 0.988470784953932, 0.990776627963145, 0.992621302370516, 0.994097041896413, 0.99527763351713, 0.996222106813704, 0.996977685450963, 0.997582148360771, 0.998065718688617, 0.998452574950893, 0.998762059960715, 0.999009647968572, 0.999366174699886, 
retn: 0.999492939759909, 0.999675481446342, 0.999740385157073, 0.999792308125659, 0.999833846500527, 0.999867077200421)

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 46, 49), size = 2, prob = 0.2)
retn: c(0.04, 0.104, 0.1808, 0.26272, 0.34464, 0.4232832, 0.49668352, 0.563792384, 0.6241903616, 0.6778774528, 0.725122093056, 0.7663537790976, 0.80208790700032, 0.832874232578048, 0.859262511644672, 0.881780509781525, 0.900920808197849, 0.917133766856383, 0.930824709723589, 0.942353924769658, 0.952038465408355, 0.960155032800787, 0.966943434619913, 0.972610274399356, 0.977332640882226, 0.981261649795973, 0.984525749508933, 0.987233743344869, 0.989477509666074, 0.991334419725002, 0.992869465373716, 0.994137115973944, 
retn: 0.995182927719133, 0.996044930127288, 0.996754814463416, 0.997338947860001, 0.997819235319415, 0.998213849880664, 0.998537849204637, 0.999021688195102, 0.999346657855512, 0.999466437248668, 0.999710090312419, 0.999843002753802)

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(225, 250, 263, 268, 269, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
args: 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 
args: 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 559, 561, 565, 576, 580, 587, 598), size = 100, prob = 0.2)
retn: <arguments too long, ignored>

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: <arguments too long, ignored>
retn: <arguments too long, ignored>

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7), size = 1, prob = 0.8)
retn: c(0.8, 0.96, 0.992, 0.9984, 0.99968, 0.999936, 0.9999872, 0.99999744)

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47), size = 100, prob = 0.8)
retn: c(0.000262261182683334, 0.000670205074094119, 0.00155952275736963, 0.00333815812392065, 0.00662863355204005, 0.0122983758281842, 0.0214509597882456, 0.0353628874075387, 0.0553612833602727, 0.082653211954592, 0.118132719127207, 0.162202001720561, 0.214644448006651, 0.274578672333612, 0.340506319093269, 0.410446953046991, 0.482136102849556, 0.553251739453701, 0.621632159265379, 0.685453884422945, 0.743349306530166, 0.794456989493782, 0.838409596842491, 0.875273073973666, 0.905455045874817, 0.929600623395736, 
retn: 0.948490986985633, 0.962955608248753, 0.973804074196094, 0.981779162676301, 0.987529621212029, 0.991599176483467, 0.994427517397117, 0.996359067289365, 0.997655965074161, 0.998512520820398, 0.999069282055452, 0.999425609245887, 0.999650250300726, 0.999789814530541)

func: quote(pfoo)
body: function (q, size, prob, mu, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     if (!missing(mu)) {
body:         if (!missing(prob)) 
body:             stop("'prob' and 'mu' both specified")
body:         .External(C_pnbinom_mu, q, size, mu, lower.tail, log.p)
body:     }
body:     else .External(C_pnbinom, q, size, prob, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3), size = 100, prob = 0.999)
retn: c(0.904792147113709, 0.99527136182508, 0.999840562168004, 0.999995914979664)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18), m = 40, n = 30, k = 20)
retn: c(8.98361246821874e-05, 0.000720338141494457, 0.00416839604593653, 0.0179606276637049, 0.0590499843583061, 0.151320820444429, 0.308642595971267, 0.512956590161967, 0.714948834418681, 0.866274127774882, 0.951394605287745, 0.986804723933096, 0.997444783622204, 0.999670155583325, 0.999974819601811)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(17, 18, 19, 20), m = 40, n = 3, k = 20)
retn: c(0.0923750101288388, 0.446479215622721, 0.856494611457743, 1)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(0, 1, 2), m = 6, n = 3, k = 2)
retn: c(0.0833333333333333, 0.583333333333333, 1)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(0, 1, 2), m = 5, n = 3, k = 2)
retn: c(0.107142857142857, 0.642857142857143, 1)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(0, 1, 2), m = 4, n = 3, k = 2)
retn: c(0.142857142857143, 0.714285714285714, 1)

func: quote(pfoo)
body: function (q, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_signrank_free))
body:     .External(C_psignrank, q, n, lower.tail, log.p)
body: }
args: list(c(0, 1), n = 1)
retn: c(0.5, 1)

func: quote(pfoo)
body: function (q, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_signrank_free))
body:     .External(C_psignrank, q, n, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3), n = 2)
retn: c(0.25, 0.5, 0.75, 1)

func: quote(pfoo)
body: function (q, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_signrank_free))
body:     .External(C_psignrank, q, n, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55), n = 10)
retn: c(0.0009765625, 0.001953125, 0.0029296875, 0.0048828125, 0.0068359375, 0.009765625, 0.013671875, 0.0185546875, 0.0244140625, 0.0322265625, 0.0419921875, 0.052734375, 0.0654296875, 0.080078125, 0.0966796875, 0.1162109375, 0.1376953125, 0.1611328125, 0.1875, 0.2158203125, 0.24609375, 0.2783203125, 0.3125, 0.34765625, 0.384765625, 0.4228515625, 0.4609375, 0.5, 0.5390625, 0.5771484375, 0.615234375, 0.65234375, 0.6875, 0.7216796875, 0.75390625, 0.7841796875, 0.8125, 0.8388671875, 0.8623046875, 0.8837890625, 
retn: 0.9033203125, 0.919921875, 0.9345703125, 0.947265625, 0.9580078125, 0.9677734375, 0.9755859375, 0.9814453125, 0.986328125, 0.990234375, 0.9931640625, 0.9951171875, 0.9970703125, 0.998046875, 0.9990234375, 1)

func: quote(pfoo)
body: function (q, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_signrank_free))
body:     .External(C_psignrank, q, n, lower.tail, log.p)
body: }
args: list(c(47, 52, 58, 63, 85, 86, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
args: 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 
args: 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 376, 377, 380, 381, 382, 384, 385, 387, 388, 390, 391, 401, 403, 410), n = 30)
retn: <arguments too long, ignored>

func: quote(pfoo)
body: function (q, m, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_wilcox_free))
body:     .External(C_pwilcox, q, m, n, lower.tail, log.p)
body: }
args: list(c(301, 320, 322, 324, 330, 332, 333, 345, 349, 351, 352, 353, 355, 356, 357, 359, 361, 362, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 
args: 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 
args: 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 
args: 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 
args: 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 834, 836, 837, 841, 842, 843, 844, 845, 846, 849, 850, 853, 855, 863, 877, 882, 883, 886, 888, 894, 900), m = 40, n = 30)
retn: <arguments too long, ignored>

func: quote(pfoo)
body: function (q, m, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_wilcox_free))
body:     .External(C_pwilcox, q, m, n, lower.tail, log.p)
body: }
args: list(c(53, 54, 58, 59, 68, 70, 72, 74, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
args: 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 
args: 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 322, 323, 324, 328, 335, 338, 343, 345), m = 40, n = 10)
retn: c(7.13765717658715e-05, 8.11402287015754e-05, 0.000133197814287773, 0.000150153741407102, 0.000413190718724472, 0.000509739116615063, 0.000625707062603816, 0.000764354787716969, 0.00102304657507148, 0.00123557275123908, 0.00135565808962122, 0.00148582629358449, 0.00177930432738661, 0.00194413981684454, 0.00212210773883278, 0.00252097612344935, 0.00274373109193167, 0.00298332575236327, 0.0032408231600683, 0.00351728179494968, 0.0038138589465398, 0.00447208235989583, 0.00522551337801243, 0.00564127266035671, 
retn: 0.00608496907555999, 0.00655804972228473, 0.00706207773966464, 0.00759859952273859, 0.00816928393207639, 0.00877577743788845, 0.00941985179904839, 0.0101032536582876, 0.0108278565045907, 0.0115955026751383, 0.0124081666102311, 0.0132677831289688, 0.0141764210032097, 0.0151361048081898, 0.0161489930719039, 0.0172171913642794, 0.0183429431019779, 0.0195284284245585, 0.0207759648315676, 0.0220877998283413, 0.0234663165279139, 0.0249138168539297, 0.0264327407714661, 0.0280254334272959, 0.0296943761599867, 
retn: 0.0314419470204047, 0.0332706559678378, 0.0351828959476085, 0.0371811925922563, 0.0392679392365014, 0.0414456579109559, 0.0437167272505822, 0.046083649134669, 0.0485487662762544, 0.0511145441459555, 0.0537832715252492, 0.0565573543069268, 0.0594390100127127, 0.0624305658770921, 0.0655341434352921, 0.068751972961807, 0.0720860604381394, 0.0755385140626502, 0.0791112047932401, 0.0828060984061143, 0.0866249060114773, 0.0905694318828985, 0.0946412067421652, 0.0988418478546712, 0.103172687349451, 0.107635136403242, 
retn: 0.112230303436185, 0.116959375818772, 0.12182322044731, 0.126822777424845, 0.1319586560612, 0.137231532642578, 0.142641737670155, 0.148189669692327, 0.15387536599391, 0.159698928305015, 0.165660089888317, 0.171758644557812, 0.177994004712588, 0.184365647975828, 0.190872659068577, 0.197514186281036, 0.20428898178874, 0.211195860460231, 0.21823323306674, 0.225399580860455, 0.2326929730136, 0.240111551710442, 0.247653048710226, 0.25531527151002, 0.263095613482593, 0.270991555323117, 0.279000161460776, 
retn: 0.287118589001372, 0.295343585501832, 0.303671998107505, 0.312100265680403, 0.320624942052168, 0.329242174718094, 0.33794823578069, 0.346739003272144, 0.355610489274747, 0.364558317641431, 0.37357826496632, 0.382665727110075, 0.391816264648526, 0.401025073194645, 0.410287526024035, 0.419598641281732, 0.428953635802875, 0.438347382000462, 0.447774964801211, 0.457231144763674, 0.466710908491685, 0.476208930876334, 0.485720135341701, 0.495239146838641, 0.504760853161359, 0.514279864658299, 0.523791069123666, 
retn: 0.533289091508315, 0.542768855236326, 0.552225035198789, 0.561652617999538, 0.571046364197125, 0.580401358718268, 0.589712473975965, 0.598974926805355, 0.608183735351474, 0.617334272889925, 0.62642173503368, 0.635441682358569, 0.644389510725253, 0.653260996727856, 0.66205176421931, 0.670757825281906, 0.679375057947832, 0.687899734319597, 0.696328001892496, 0.704656414498168, 0.712881410998628, 0.720999838539224, 0.729008444676883, 0.736904386517407, 0.74468472848998, 0.752346951289774, 0.759888448289558, 
retn: 0.7673070269864, 0.774600419139545, 0.78176676693326, 0.788804139539769, 0.79571101821126, 0.802485813718964, 0.809127340931423, 0.815634352024172, 0.822005995287411, 0.828241355442188, 0.834339910111683, 0.840301071694985, 0.84612463400609, 0.851810330307673, 0.857358262329845, 0.862768467357422, 0.8680413439388, 0.873177222575155, 0.87817677955269, 0.883040624181228, 0.887769696563815, 0.892364863596758, 0.896827312650549, 0.901158152145329, 0.905358793257835, 0.909430568117102, 0.913375093988523, 
retn: 0.917193901593886, 0.92088879520676, 0.92446148593735, 0.927913939561861, 0.931248027038193, 0.934465856564708, 0.937569434122908, 0.940560989987287, 0.943442645693073, 0.946216728474751, 0.948885455854044, 0.951451233723746, 0.953916350865331, 0.956283272749418, 0.958554342089044, 0.960732060763499, 0.962818807407744, 0.964817104052392, 0.966729344032162, 0.968558052979595, 0.970305623840013, 0.971974566572704, 0.973567259228534, 0.97508618314607, 0.976533683472086, 0.977912200171659, 0.979224035168432, 
retn: 0.980471571575442, 0.981657056898022, 0.982782808635721, 0.983851006928096, 0.98486389519181, 0.98582357899679, 0.986732216871031, 0.987591833389769, 0.988404497324862, 0.989172143495409, 0.989896746341712, 0.990580148200952, 0.991224222562112, 0.991830716067924, 0.992401400477261, 0.992937922260335, 0.993441950277715, 0.99391503092444, 0.994358727339643, 0.994774486621988, 0.995163768038809, 0.995527917640104, 0.995868292573701, 0.99618614105346, 0.99648271820505, 0.996759176839932, 0.997016674247637, 
retn: 0.997256268908068, 0.997479023876551, 0.997685908071549, 0.997877892261167, 0.998055860183156, 0.998373199525612, 0.998644341910379, 0.998976953424929, 0.999070627095372, 0.999156684539044, 0.999434901790632, 0.999732757821141, 0.999810061802483, 0.999895692369086, 0.999918859771298)

func: quote(pfoo)
body: function (q, m, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_wilcox_free))
body:     .External(C_pwilcox, q, m, n, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18), m = 6, n = 3)
retn: c(0.0119047619047619, 0.0238095238095238, 0.0476190476190476, 0.0833333333333333, 0.130952380952381, 0.19047619047619, 0.273809523809524, 0.357142857142857, 0.452380952380952, 0.547619047619048, 0.642857142857143, 0.726190476190476, 0.80952380952381, 0.869047619047619, 0.916666666666667, 0.952380952380952, 0.976190476190476, 0.988095238095238, 1)

func: quote(pfoo)
body: function (q, m, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_wilcox_free))
body:     .External(C_pwilcox, q, m, n, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), m = 5, n = 3)
retn: c(0.0178571428571429, 0.0357142857142857, 0.0714285714285714, 0.125, 0.196428571428571, 0.285714285714286, 0.392857142857143, 0.5, 0.607142857142857, 0.714285714285714, 0.803571428571429, 0.875, 0.928571428571429, 0.964285714285714, 0.982142857142857, 1)

func: quote(pfoo)
body: function (q, m, n, lower.tail = TRUE, log.p = FALSE) 
body: {
body:     on.exit(.External(C_wilcox_free))
body:     .External(C_pwilcox, q, m, n, lower.tail, log.p)
body: }
args: list(c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), m = 4, n = 3)
retn: c(0.0285714285714286, 0.0571428571428571, 0.114285714285714, 0.2, 0.314285714285714, 0.428571428571429, 0.571428571428571, 0.685714285714286, 0.8, 0.885714285714286, 0.942857142857143, 0.971428571428571, 1)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29), m = 60, n = 100, k = 50)
retn: c(2.91645714713836e-06, 1.79988315640625e-05, 9.20779938402923e-05, 0.000396765169756082, 0.00145859997782262, 0.00462353234165727, 0.0127528142600552, 0.0308575886424212, 0.065996207672482, 0.125677800609693, 0.214691540075704, 0.331605108329569, 0.46714461270231, 0.606095866613037, 0.732243754984847, 0.8337712305356, 0.906263386373921, 0.952202429740195, 0.978043141633724, 0.990942825010974, 0.996654982376912, 0.998896983536414, 0.99967614053278, 0.999915567213461)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(0, 1, 2, 3, 4, 5), m = 6, n = 10, k = 5)
retn: c(0.0576923076923077, 0.346153846153846, 0.758241758241758, 0.964285714285714, 0.998626373626374, 1)

func: quote(pfoo)
body: function (q, m, n, k, lower.tail = TRUE, log.p = FALSE) 
body: .External(C_phyper, q, m, n, k, lower.tail, log.p)
args: list(c(158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218), m = 600, n = 1000, k = 500)
retn: c(0.000575378888261125, 0.000851131336358415, 0.00124382005697696, 0.00179583735247818, 0.00256186403866841, 0.00361124595883375, 0.00503041127253516, 0.00692516672294302, 0.00942266335822907, 0.0126727789195908, 0.0168486317913223, 0.0221459272537294, 0.0287808479557704, 0.036986243129419, 0.0470059489728223, 0.0590871863373993, 0.0734711275698639, 0.0903818934754704, 0.110014420545736, 0.132521810566555, 0.15800291983667, 0.186491043614327, 0.217944585570507, 0.252240559470692, 0.289171645863915, 
retn: 0.328447323945449, 0.369699331079951, 0.412491391445887, 0.456332829197359, 0.500695372238407, 0.545032191699481, 0.588798036845843, 0.631469235110169, 0.672562341689114, 0.711650340714838, 0.74837550732968, 0.782458314627563, 0.813702082548315, 0.841993385858857, 0.867298534883229, 0.889656689800721, 0.909170348506289, 0.925994049359294, 0.94032215279618, 0.952376517046299, 0.962394776704212, 0.970619786299278, 0.977290623349581, 0.982635374905501, 0.986865773755041, 0.99017361679289, 0.992728795564017, 
retn: 0.994678700297468, 0.996148722663359, 0.997243574955572, 0.998049158547623, 0.998634745630959, 0.99905527886662, 0.99935363786519, 0.999562764724724, 0.999707579904365)

