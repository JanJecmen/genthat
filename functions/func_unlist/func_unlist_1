func: quote(unlist)
body: function (x, recursive = TRUE, use.names = TRUE) 
body: {
body:     if (.Internal(islistfactor(x, recursive))) {
body:         lv <- unique(.Internal(unlist(lapply(x, levels), recursive, FALSE)))
body:         nm <- if (use.names) 
body:             names(.Internal(unlist(x, recursive, use.names)))
body:         res <- .Internal(unlist(lapply(x, as.character), recursive, FALSE))
body:         res <- match(res, lv)
body:         structure(res, levels = lv, names = nm, class = "factor")
body:     }
body:     else .Internal(unlist(x, recursive, use.names))
body: }
args: list(list(character(0)))
retn: character(0)

func: quote(unlist)
body: function (x, recursive = TRUE, use.names = TRUE) 
body: {
body:     if (.Internal(islistfactor(x, recursive))) {
body:         lv <- unique(.Internal(unlist(lapply(x, levels), recursive, FALSE)))
body:         nm <- if (use.names) 
body:             names(.Internal(unlist(x, recursive, use.names)))
body:         res <- .Internal(unlist(lapply(x, as.character), recursive, FALSE))
body:         res <- match(res, lv)
body:         structure(res, levels = lv, names = nm, class = "factor")
body:     }
body:     else .Internal(unlist(x, recursive, use.names))
body: }
args: list(list("~/R/x86_64-unknown-linux-gnu-library/3.0"))
retn: "~/R/x86_64-unknown-linux-gnu-library/3.0"

