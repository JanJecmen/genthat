func: quote(pdfFonts)
body: function (...) 
body: {
body:     initPSandPDFfonts()
body:     ndots <- length(fonts <- list(...))
body:     if (ndots == 0L) 
body:         get(".PDF.Fonts", envir = .PSenv)
body:     else {
body:         fontNames <- names(fonts)
body:         nnames <- length(fontNames)
body:         if (nnames == 0L) {
body:             if (!all(sapply(fonts, is.character))) 
body:                 stop(gettextf("invalid arguments in '%s' (must be font names)", "pdfFonts"), domain = NA)
body:             else get(".PDF.Fonts", envir = .PSenv)[unlist(fonts)]
body:         }
body:         else {
body:             if (ndots != nnames) 
body:                 stop(gettextf("invalid arguments in '%s' (need named args)", "pdfFonts"), domain = NA)
body:             setFonts(fonts, fontNames, ".PDF.Fonts")
body:         }
body:     }
body: }
args: list(serif = structure(list(family = "Times", metrics = c("Times-Roman.afm", "Times-Bold.afm", "Times-Italic.afm", "Times-BoldItalic.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), sans = structure(list(family = "Helvetica", metrics = c("Helvetica.afm", "Helvetica-Bold.afm", "Helvetica-Oblique.afm", "Helvetica-BoldOblique.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), mono = structure(list(
args:     family = "Courier", metrics = c("Courier.afm", "Courier-Bold.afm", "Courier-Oblique.afm", "Courier-BoldOblique.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), AvantGarde = structure(list(family = "AvantGarde", metrics = c("agw_____.afm", "agd_____.afm", "agwo____.afm", "agdo____.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), Bookman = structure(list(family = "Bookman", 
args:     metrics = c("bkl_____.afm", "bkd_____.afm", "bkli____.afm", "bkdi____.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), Courier = structure(list(family = "Courier", metrics = c("Courier.afm", "Courier-Bold.afm", "Courier-Oblique.afm", "Courier-BoldOblique.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), Helvetica = structure(list(family = "Helvetica", metrics = c("Helvetica.afm", 
args: "Helvetica-Bold.afm", "Helvetica-Oblique.afm", "Helvetica-BoldOblique.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), `Helvetica-Narrow` = structure(list(family = "Helvetica-Narrow", metrics = c("hvn_____.afm", "hvnb____.afm", "hvno____.afm", "hvnbo___.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), NewCenturySchoolbook = structure(list(family = "NewCenturySchoolbook", metrics = c("ncr_____.afm", 
args: "ncb_____.afm", "nci_____.afm", "ncbi____.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), Palatino = structure(list(family = "Palatino", metrics = c("por_____.afm", "pob_____.afm", "poi_____.afm", "pobi____.afm", "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), Times = structure(list(family = "Times", metrics = c("Times-Roman.afm", "Times-Bold.afm", "Times-Italic.afm", "Times-BoldItalic.afm", 
args: "Symbol.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), URWGothic = structure(list(family = "URWGothic", metrics = c("a010013l.afm", "a010015l.afm", "a010033l.afm", "a010035l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), URWBookman = structure(list(family = "URWBookman", metrics = c("b018012l.afm", "b018015l.afm", "b018032l.afm", "b018035l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", 
args: "metrics", "encoding"), class = "Type1Font"), NimbusMon = structure(list(family = "NimbusMon", metrics = c("n022003l.afm", "n022004l.afm", "n022023l.afm", "n022024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), NimbusSan = structure(list(family = "NimbusSan", metrics = c("n019003l.afm", "n019004l.afm", "n019023l.afm", "n019024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), URWHelvetica = structure(list(
args:     family = "URWHelvetica", metrics = c("n019003l.afm", "n019004l.afm", "n019023l.afm", "n019024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), NimbusSanCond = structure(list(family = "NimbusSanCond", metrics = c("n019043l.afm", "n019044l.afm", "n019063l.afm", "n019064l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), CenturySch = structure(list(family = "CenturySch", 
args:     metrics = c("c059013l.afm", "c059016l.afm", "c059033l.afm", "c059036l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), URWPalladio = structure(list(family = "URWPalladio", metrics = c("p052003l.afm", "p052004l.afm", "p052023l.afm", "p052024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), NimbusRom = structure(list(family = "NimbusRom", metrics = c("n021003l.afm", "n021004l.afm", 
args: "n021023l.afm", "n021024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"), URWTimes = structure(list(family = "URWTimes", metrics = c("n021003l.afm", "n021004l.afm", "n021023l.afm", "n021024l.afm", "s050000l.afm"), encoding = "default"), .Names = c("family", "metrics", "encoding"), class = "Type1Font"))
retn: <arguments too long, ignored>

