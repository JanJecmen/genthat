func: quote(eigen)
body: function (x, symmetric, only.values = FALSE, EISPACK = FALSE) 
body: {
body:     if (EISPACK) 
body:         warning("EISPACK = TRUE is defunct and will be ignored", domain = NA)
body:     x <- as.matrix(x)
body:     n <- nrow(x)
body:     if (!n) 
body:         stop("0 x 0 matrix")
body:     if (n != ncol(x)) 
body:         stop("non-square matrix in 'eigen'")
body:     n <- as.integer(n)
body:     if (is.na(n)) 
body:         stop("invalid nrow(x)")
body:     complex.x <- is.complex(x)
body:     if (!all(is.finite(x))) 
body:         stop("infinite or missing values in 'x'")
body:     if (missing(symmetric)) 
body:         symmetric <- isSymmetric.matrix(x)
body:     if (symmetric) {
body:         z <- if (!complex.x) 
body:             .Internal(La_rs(x, only.values))
body:         else .Internal(La_rs_cmplx(x, only.values))
body:         ord <- rev(seq_along(z$values))
body:     }
body:     else {
body:         z <- if (!complex.x) 
body:             .Internal(La_rg(x, only.values))
body:         else .Internal(La_rg_cmplx(x, only.values))
body:         ord <- sort.list(Mod(z$values), decreasing = TRUE)
body:     }
body:     return(list(values = z$values[ord], vectors = if (!only.values) z$vectors[, ord, drop = FALSE]))
body: }
args: list(structure(c(-1, 0, 1, 0, 1, 2, 1, 2, 3), .Dim = c(3L, 3L)))
retn: structure(list(values = c(4.37228132326901, -4.44089209850063e-16, -1.37228132326901), vectors = structure(c(-0.158088395419609, -0.503691864778969, -0.84929533413833, 0.408248290463863, -0.816496580927726, 0.408248290463862, 0.899078079238387, 0.282184051088678, -0.33470997706103), .Dim = c(3L, 3L))), .Names = c("values", "vectors"))

