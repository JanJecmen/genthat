func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(integer(0))
retn: list()

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(list())
retn: list()

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(NULL)
retn: list()

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(1L)
retn: list(1L)

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(list(1L))
retn: list(1L)

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(3.14159265358979)
retn: list(3.14159265358979)

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(list(3.14159265358979))
retn: list(3.14159265358979)

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list("1.3")
retn: list("1.3")

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(list("1.3"))
retn: list("1.3")

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(structure(list(a = 1), .Names = "a"))
retn: structure(list(a = 1), .Names = "a")

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(structure(list(`character(0)` = structure(integer(0), .Label = character(0), class = "factor")), .Names = "character(0)", row.names = character(0), class = "data.frame"))
retn: structure(list(`character(0)` = structure(integer(0), .Label = character(0), class = "factor")), .Names = "character(0)")

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(structure(list(`character(0)` = structure(integer(0), .Label = character(0), class = "factor")), .Names = "character(0)"))
retn: structure(list(`character(0)` = structure(integer(0), .Label = character(0), class = "factor")), .Names = "character(0)")

func: quote(as.list)
body: function (x, ...) 
body: UseMethod("as.list")
args: list(<environment>)
retn: structure(list(`utils::Sweave` = structure(list(name = "Sweave", package = "utils", pattern = "[.][rRsS](nw|tex)$", weave = function (...) 
retn: utils::Sweave(...), tangle = function (...) 
retn: utils::Stangle(...)), .Names = c("name", "package", "pattern", "weave", "tangle"))), .Names = "utils::Sweave")

