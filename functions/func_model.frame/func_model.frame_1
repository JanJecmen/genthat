func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ x), data = structure(list(x = 1:20, y = c(-0.0656098455489516, 2.43852792187746, 2.53966668788191, 3.30491480120453, 2.98443953020722, 5.89982480016092, 5.17676451597967, 3.97323195543808, 8.04943369928059, 12.3720578323624, 9.47054803777027, 13.660989417508, 8.46543776049927, 13.8404911151112, 16.5252349293301, 16.9034600865001, 17.3235332494436, 16.0001513020355, 16.2984079658426, 16.6858496158879)), .Names = c("x", "y"), row.names = c(NA, -20L), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(y = c(-0.0656098455489516, 2.43852792187746, 2.53966668788191, 3.30491480120453, 2.98443953020722, 5.89982480016092, 5.17676451597967, 3.97323195543808, 8.04943369928059, 12.3720578323624, 9.47054803777027, 13.660989417508, 8.46543776049927, 13.8404911151112, 16.5252349293301, 16.9034600865001, 17.3235332494436, 16.0001513020355, 16.2984079658426, 16.6858496158879), x = 1:20), .Names = c("y", "x"), terms = quote(y ~ x), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ x), data = structure(list(x = 1:20, y = c(-0.06561, 2.4385, 2.5397, 3.3049, 2.9844, 5.8998, 5.1768, 3.9732, 8.0494, 12.372, 9.4705, 13.661, 8.4654, 13.84, 16.525, 16.903, 17.324, 16, 16.298, 16.686)), .Names = c("x", "y"), row.names = c(NA, -20L), class = "data.frame"), weights = c(0.44444, 0.34315, 0.28719, 0.25, 0.22291, 0.20204, 0.18533, 0.17157, 0.16, 0.1501, 0.14151, 0.13397, 0.1273, 0.12133, 0.11597, 0.11111, 0.10669, 0.10264, 0.098923, 0.095492), drop.unused.levels = TRUE)
args: 
retn: structure(list(y = c(-0.0656098455489516, 2.43852792187746, 2.53966668788191, 3.30491480120453, 2.98443953020722, 5.89982480016092, 5.17676451597967, 3.97323195543808, 8.04943369928059, 12.3720578323624, 9.47054803777027, 13.660989417508, 8.46543776049927, 13.8404911151112, 16.5252349293301, 16.9034600865001, 17.3235332494436, 16.0001513020355, 16.2984079658426, 16.6858496158879), x = 1:20, `(weights)` = c(0.444444444444444, 0.34314575050762, 0.287187078897963, 0.25, 0.222912360003365, 0.202041028867288, 
retn: 0.185331002551839, 0.17157287525381, 0.16, 0.150098817702942, 0.141510272537012, 0.133974596215561, 0.127298513488595, 0.121334818116169, 0.115969144303151, 0.111111111111111, 0.106688224793594, 0.102641576561691, 0.0989227417926632, 0.0954915028125263)), .Names = c("y", "x", "(weights)"), terms = quote(y ~ x), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ x))
retn: structure(list(y = c(850L, 740L, 900L, 1070L, 930L, 850L, 950L, 980L, 980L, 880L, 1000L, 980L, 930L, 650L, 760L, 810L, 1000L, 1000L, 960L, 960L, 960L, 940L, 960L, 940L, 880L, 800L, 850L, 880L, 900L, 840L, 830L, 790L, 810L, 880L, 880L, 830L, 800L, 790L, 760L, 800L, 880L, 880L, 880L, 860L, 720L, 720L, 620L, 860L, 970L, 950L, 880L, 910L, 850L, 870L, 840L, 840L, 850L, 840L, 840L, 840L, 890L, 810L, 810L, 820L, 800L, 770L, 760L, 740L, 750L, 760L, 910L, 920L, 890L, 860L, 880L, 720L, 840L, 850L, 850L, 780L, 
retn: 890L, 840L, 780L, 810L, 760L, 810L, 790L, 810L, 820L, 850L, 870L, 870L, 810L, 740L, 810L, 940L, 950L, 800L, 810L, 870L), x = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
retn: 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L), .Label = c("1", "2", "3", "4", "5"), class = "factor")), .Names = c("y", "x"), terms = quote(y ~ x), row.names = c(NA, 100L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(Speed ~ Run + Expt), data = structure(list(Expt = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L), .Label = c("1", "2", 
args: "3", "4", "5"), class = "factor"), Run = structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 
args: 20L), .Label = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"), class = "factor"), Speed = c(850L, 740L, 900L, 1070L, 930L, 850L, 950L, 980L, 980L, 880L, 1000L, 980L, 930L, 650L, 760L, 810L, 1000L, 1000L, 960L, 960L, 960L, 940L, 960L, 940L, 880L, 800L, 850L, 880L, 900L, 840L, 830L, 790L, 810L, 880L, 880L, 830L, 800L, 790L, 760L, 800L, 880L, 880L, 880L, 860L, 720L, 720L, 620L, 860L, 970L, 950L, 880L, 910L, 850L, 870L, 840L, 840L, 850L, 
args: 840L, 840L, 840L, 890L, 810L, 810L, 820L, 800L, 770L, 760L, 740L, 750L, 760L, 910L, 920L, 890L, 860L, 880L, 720L, 840L, 850L, 850L, 780L, 890L, 840L, 780L, 810L, 760L, 810L, 790L, 810L, 820L, 850L, 870L, 870L, 810L, 740L, 810L, 940L, 950L, 800L, 810L, 870L)), .Names = c("Expt", "Run", "Speed"), row.names = c("001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", 
args: "029", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100"
args: ), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(Speed = c(850L, 740L, 900L, 1070L, 930L, 850L, 950L, 980L, 980L, 880L, 1000L, 980L, 930L, 650L, 760L, 810L, 1000L, 1000L, 960L, 960L, 960L, 940L, 960L, 940L, 880L, 800L, 850L, 880L, 900L, 840L, 830L, 790L, 810L, 880L, 880L, 830L, 800L, 790L, 760L, 800L, 880L, 880L, 880L, 860L, 720L, 720L, 620L, 860L, 970L, 950L, 880L, 910L, 850L, 870L, 840L, 840L, 850L, 840L, 840L, 840L, 890L, 810L, 810L, 820L, 800L, 770L, 760L, 740L, 750L, 760L, 910L, 920L, 890L, 860L, 880L, 720L, 840L, 850L, 850L, 
retn: 780L, 890L, 840L, 780L, 810L, 760L, 810L, 790L, 810L, 820L, 850L, 870L, 870L, 810L, 740L, 810L, 940L, 950L, 800L, 810L, 870L), Run = structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 
retn: 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L), .Label = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"), class = "factor"), Expt = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 
retn: 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L), .Label = c("1", "2", "3", "4", "5"), class = "factor")), .Names = c("Speed", "Run", "Expt"), terms = quote(Speed ~ Run + Expt), row.names = c("001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", "029", 
retn: "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100"), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(Speed ~ Expt), data = structure(list(Expt = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L), .Label = c("1", "2", "3", 
args: "4", "5"), class = "factor"), Run = structure(c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L
args: ), .Label = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"), class = "factor"), Speed = c(850L, 740L, 900L, 1070L, 930L, 850L, 950L, 980L, 980L, 880L, 1000L, 980L, 930L, 650L, 760L, 810L, 1000L, 1000L, 960L, 960L, 960L, 940L, 960L, 940L, 880L, 800L, 850L, 880L, 900L, 840L, 830L, 790L, 810L, 880L, 880L, 830L, 800L, 790L, 760L, 800L, 880L, 880L, 880L, 860L, 720L, 720L, 620L, 860L, 970L, 950L, 880L, 910L, 850L, 870L, 840L, 840L, 850L, 
args: 840L, 840L, 840L, 890L, 810L, 810L, 820L, 800L, 770L, 760L, 740L, 750L, 760L, 910L, 920L, 890L, 860L, 880L, 720L, 840L, 850L, 850L, 780L, 890L, 840L, 780L, 810L, 760L, 810L, 790L, 810L, 820L, 850L, 870L, 870L, 810L, 740L, 810L, 940L, 950L, 800L, 810L, 870L)), .Names = c("Expt", "Run", "Speed"), row.names = c("001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", 
args: "029", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100"
args: ), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(Speed = c(850L, 740L, 900L, 1070L, 930L, 850L, 950L, 980L, 980L, 880L, 1000L, 980L, 930L, 650L, 760L, 810L, 1000L, 1000L, 960L, 960L, 960L, 940L, 960L, 940L, 880L, 800L, 850L, 880L, 900L, 840L, 830L, 790L, 810L, 880L, 880L, 830L, 800L, 790L, 760L, 800L, 880L, 880L, 880L, 860L, 720L, 720L, 620L, 860L, 970L, 950L, 880L, 910L, 850L, 870L, 840L, 840L, 850L, 840L, 840L, 840L, 890L, 810L, 810L, 820L, 800L, 770L, 760L, 740L, 750L, 760L, 910L, 920L, 890L, 860L, 880L, 720L, 840L, 850L, 850L, 
retn: 780L, 890L, 840L, 780L, 810L, 760L, 810L, 790L, 810L, 820L, 850L, 870L, 870L, 810L, 740L, 810L, 940L, 950L, 800L, 810L, 870L), Expt = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
retn: 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L), .Label = c("1", "2", "3", "4", "5"), class = "factor")), .Names = c("Speed", "Expt"), terms = quote(Speed ~ Expt), row.names = c("001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", "029", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", 
retn: "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100"), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ x), drop.unused.levels = TRUE)
retn: structure(list(y = c(10.4395243534478, 16.7698225105167, 24.5587083141491, 29.0705083914246, 35.1292877351609, 42.7150649868833, 47.4609162059892, 51.7349387653935, 58.3131471481065, 64.5543380299, 72.2240817974395, 77.3598138270574, 83.400771450594, 89.1106827159451, 94.4441588652459, 102.786913136803, 107.497850478229, 111.03338284337, 119.701355901564, 124.527208592272), x = 1:20), .Names = c("y", "x"), terms = quote(y ~ x), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(Fr ~ M.user * Temp * Soft + Brand), data = structure(list(Fr = c(68, 42, 42, 30, 37, 52, 24, 43, 66, 50, 33, 23, 47, 55, 23, 47, 63, 53, 29, 27, 57, 49, 19, 29), Temp = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("Low", "High"), class = "factor"), Soft = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L), .Label = c("Hard", "Medium", "Soft"), class = "factor"), 
args:     M.user = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L), .Label = c("N", "Y"), class = "factor"), Brand = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("X", "M"), class = "factor")), .Names = c("Fr", "Temp", "Soft", "M.user", "Brand"), row.names = c(NA, -24L), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(Fr = c(68, 42, 42, 30, 37, 52, 24, 43, 66, 50, 33, 23, 47, 55, 23, 47, 63, 53, 29, 27, 57, 49, 19, 29), M.user = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L), .Label = c("N", "Y"), class = "factor"), Temp = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("Low", "High"), class = "factor"), Soft = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 
retn: 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L), .Label = c("Hard", "Medium", "Soft"), class = "factor"), Brand = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("X", "M"), class = "factor")), .Names = c("Fr", "M.user", "Temp", "Soft", "Brand"), terms = quote(Fr ~ M.user * Temp * Soft + Brand), row.names = c(NA, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(Fr ~ M.user * Temp * Soft + Brand * M.user * Temp), data = structure(list(Fr = c(68, 42, 42, 30, 37, 52, 24, 43, 66, 50, 33, 23, 47, 55, 23, 47, 63, 53, 29, 27, 57, 49, 19, 29), Temp = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("Low", "High"), class = "factor"), Soft = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L), .Label = c("Hard", "Medium", 
args: "Soft"), class = "factor"), M.user = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L), .Label = c("N", "Y"), class = "factor"), Brand = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("X", "M"), class = "factor")), .Names = c("Fr", "Temp", "Soft", "M.user", "Brand"), row.names = c(NA, -24L), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(Fr = c(68, 42, 42, 30, 37, 52, 24, 43, 66, 50, 33, 23, 47, 55, 23, 47, 63, 53, 29, 27, 57, 49, 19, 29), M.user = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L), .Label = c("N", "Y"), class = "factor"), Temp = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("Low", "High"), class = "factor"), Soft = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 
retn: 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L), .Label = c("Hard", "Medium", "Soft"), class = "factor"), Brand = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("X", "M"), class = "factor")), .Names = c("Fr", "M.user", "Temp", "Soft", "Brand"), terms = quote(Fr ~ M.user * Temp * Soft + Brand * M.user * Temp), row.names = c(NA, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(weight ~ group), drop.unused.levels = TRUE)
retn: structure(list(weight = c(4.17, 5.58, 5.18, 6.11, 4.5, 4.61, 5.17, 4.53, 5.33, 5.14, 4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69), group = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("Ctl", "Trt"), class = "factor")), .Names = c("weight", "group"), terms = quote(weight ~ group), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(weight ~ group - 1), drop.unused.levels = TRUE)
retn: structure(list(weight = c(4.17, 5.58, 5.18, 6.11, 4.5, 4.61, 5.17, 4.53, 5.33, 5.14, 4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69), group = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("Ctl", "Trt"), class = "factor")), .Names = c("weight", "group"), terms = quote(weight ~ group - 1), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(birthw ~ sex + age), drop.unused.levels = TRUE)
retn: structure(list(birthw = c(2968, 2795, 3163, 2925, 2625, 2847, 3292, 3473, 2628, 3176, 3421, 2975, 3317, 2729, 2935, 2754, 3210, 2817, 3126, 2539, 2412, 2991, 2875, 3231), sex = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("M", "F"), class = "factor"), age = c(40, 38, 40, 35, 36, 37, 41, 40, 37, 38, 40, 38, 40, 36, 40, 38, 42, 39, 40, 37, 36, 38, 39, 40)), .Names = c("birthw", "sex", "age"), terms = quote(birthw ~ sex + age), row.names = c(NA, 
retn: 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(birthw ~ sex + age - 1), drop.unused.levels = TRUE)
retn: structure(list(birthw = c(2968, 2795, 3163, 2925, 2625, 2847, 3292, 3473, 2628, 3176, 3421, 2975, 3317, 2729, 2935, 2754, 3210, 2817, 3126, 2539, 2412, 2991, 2875, 3231), sex = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("M", "F"), class = "factor"), age = c(40, 38, 40, 35, 36, 37, 41, 40, 37, 38, 40, 38, 40, 36, 40, 38, 42, 39, 40, 37, 36, 38, 39, 40)), .Names = c("birthw", "sex", "age"), terms = quote(birthw ~ sex + age - 
retn:     1), row.names = c(NA, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(birthw ~ sex + sex:age - 1), drop.unused.levels = TRUE)
retn: structure(list(birthw = c(2968, 2795, 3163, 2925, 2625, 2847, 3292, 3473, 2628, 3176, 3421, 2975, 3317, 2729, 2935, 2754, 3210, 2817, 3126, 2539, 2412, 2991, 2875, 3231), sex = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("M", "F"), class = "factor"), age = c(40, 38, 40, 35, 36, 37, 41, 40, 37, 38, 40, 38, 40, 36, 40, 38, 42, 39, 40, 37, 36, 38, 39, 40)), .Names = c("birthw", "sex", "age"), terms = quote(birthw ~ sex + sex:age - 
retn:     1), row.names = c(NA, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(birthw ~ sex + age - 1), subset = -4, drop.unused.levels = TRUE)
retn: structure(list(birthw = c(2968, 2795, 3163, 2625, 2847, 3292, 3473, 2628, 3176, 3421, 2975, 3317, 2729, 2935, 2754, 3210, 2817, 3126, 2539, 2412, 2991, 2875, 3231), sex = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("M", "F"), class = "factor"), age = c(40, 38, 40, 36, 37, 41, 40, 37, 38, 40, 38, 40, 36, 40, 38, 42, 39, 40, 37, 36, 38, 39, 40)), .Names = c("birthw", "sex", "age"), terms = quote(birthw ~ sex + age - 1), row.names = c(1L, 
retn: 2L, 3L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(birthw ~ sex + age + sex:age - 1), drop.unused.levels = TRUE)
retn: structure(list(birthw = c(2968, 2795, 3163, 2925, 2625, 2847, 3292, 3473, 2628, 3176, 3421, 2975, 3317, 2729, 2935, 2754, 3210, 2817, 3126, 2539, 2412, 2991, 2875, 3231), sex = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c("M", "F"), class = "factor"), age = c(40, 38, 40, 35, 36, 37, 41, 40, 37, 38, 40, 38, 40, 36, 40, 38, 42, 39, 40, 37, 36, 38, 39, 40)), .Names = c("birthw", "sex", "age"), terms = quote(birthw ~ sex + age + 
retn:     sex:age - 1), row.names = c(NA, 24L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(carb ~ age + wgt + prot), data = structure(list(carb = c(33, 40, 37, 27, 30, 43, 34, 48, 30, 38, 50, 51, 30, 36, 41, 42, 46, 24, 35, 37), age = c(33, 47, 49, 35, 46, 52, 62, 23, 32, 42, 31, 61, 63, 40, 50, 64, 56, 61, 48, 28), wgt = c(100, 92, 135, 144, 140, 101, 95, 101, 98, 105, 108, 85, 130, 127, 109, 107, 117, 100, 118, 102), prot = c(14, 15, 18, 12, 15, 15, 14, 17, 15, 14, 17, 19, 19, 20, 15, 16, 18, 13, 18, 14)), .Names = c("carb", "age", "wgt", "prot"), row.names = c(NA, 
args: -20L), class = "data.frame"), drop.unused.levels = TRUE)
retn: structure(list(carb = c(33, 40, 37, 27, 30, 43, 34, 48, 30, 38, 50, 51, 30, 36, 41, 42, 46, 24, 35, 37), age = c(33, 47, 49, 35, 46, 52, 62, 23, 32, 42, 31, 61, 63, 40, 50, 64, 56, 61, 48, 28), wgt = c(100, 92, 135, 144, 140, 101, 95, 101, 98, 105, 108, 85, 130, 127, 109, 107, 117, 100, 118, 102), prot = c(14, 15, 18, 12, 15, 15, 14, 17, 15, 14, 17, 19, 19, 20, 15, 16, 18, 13, 18, 14)), .Names = c("carb", "age", "wgt", "prot"), terms = quote(carb ~ age + wgt + prot), row.names = c(NA, 20L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ a * b), drop.unused.levels = TRUE)
retn: structure(list(y = c(6.8, 6.6, 5.3, 6.1, 7.5, 7.4, 7.2, 6.5, 7.8, 9.1, 8.8, 9.1), a = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L), .Label = c("1", "2", "3"), class = "factor"), b = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("1", "2"), class = "factor")), .Names = c("y", "a", "b"), terms = quote(y ~ a * b), row.names = c(NA, 12L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ x + m), drop.unused.levels = TRUE)
retn: structure(list(y = c(6, 4, 5, 3, 4, 3, 6, 8, 9, 7, 9, 8, 5, 7, 6, 7, 7, 7, 8, 5, 7), x = c(3, 1, 3, 1, 2, 1, 4, 4, 5, 5, 4, 3, 1, 2, 3, 2, 2, 3, 4, 1, 4), m = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L), .Label = c("1", "2", "3"), class = "factor")), .Names = c("y", "x", "m"), terms = quote(y ~ x + m), row.names = c(NA, 21L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(dead ~ dose), drop.unused.levels = TRUE)
retn: structure(list(dead = structure(c(6, 13, 18, 28, 52, 53, 61, 60, 53, 47, 44, 28, 11, 6, 1, 0), .Dim = c(8L, 2L), .Dimnames = list(NULL, c("x", ""))), dose = c(1.6907, 1.7242, 1.7552, 1.7842, 1.8113, 1.8369, 1.861, 1.8839)), .Names = c("dead", "dose"), terms = quote(dead ~ dose), row.names = c(NA, 8L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(dead ~ dose - 1), drop.unused.levels = TRUE)
retn: structure(list(dead = structure(c(6, 13, 18, 28, 52, 53, 61, 60, 53, 47, 44, 28, 11, 6, 1, 0), .Dim = c(8L, 2L), .Dimnames = list(NULL, c("x", ""))), dose = c(1.6907, 1.7242, 1.7552, 1.7842, 1.8113, 1.8369, 1.861, 1.8839)), .Names = c("dead", "dose"), terms = quote(dead ~ dose - 1), row.names = c(NA, 8L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ g * f), drop.unused.levels = TRUE)
retn: structure(list(y = structure(c(55, 52, 57, 55, 50, 50, 47, 47, 51, 21, 31, 40), .Dim = c(6L, 2L), .Dimnames = list(NULL, c("x", ""))), g = structure(c(1L, 1L, 1L, 2L, 2L, 2L), .Label = c("1", "2"), class = "factor"), f = c(40, 150, 350, 40, 150, 350)), .Names = c("y", "g", "f"), terms = quote(y ~ g * f), row.names = c(NA, 6L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ g + f), drop.unused.levels = TRUE)
retn: structure(list(y = structure(c(55, 52, 57, 55, 50, 50, 47, 47, 51, 21, 31, 40), .Dim = c(6L, 2L), .Dimnames = list(NULL, c("x", ""))), g = structure(c(1L, 1L, 1L, 2L, 2L, 2L), .Label = c("1", "2"), class = "factor"), f = c(40, 150, 350, 40, 150, 350)), .Names = c("y", "g", "f"), terms = quote(y ~ g + f), row.names = c(NA, 6L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(y ~ g), drop.unused.levels = TRUE)
retn: structure(list(y = structure(c(55, 52, 57, 55, 50, 50, 47, 47, 51, 21, 31, 40), .Dim = c(6L, 2L), .Dimnames = list(NULL, c("x", ""))), g = structure(c(1L, 1L, 1L, 2L, 2L, 2L), .Label = c("1", "2"), class = "factor")), .Names = c("y", "g"), terms = quote(y ~ g), row.names = c(NA, 6L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(counts ~ type + site), drop.unused.levels = TRUE)
retn: structure(list(counts = c(22, 2, 10, 16, 54, 115, 19, 33, 73, 11, 17, 28), type = structure(c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L), .Label = c("freckle", "superficial", "nodular", "indeterminate"), class = "factor"), site = structure(c(1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L), .Label = c("head/neck", "trunk", "extremities"), class = "factor")), .Names = c("counts", "type", "site"), terms = quote(counts ~ type + site), row.names = c(NA, 12L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(counts ~ outcome + treatment), drop.unused.levels = TRUE)
retn: structure(list(counts = c(18, 17, 15, 20, 10, 20, 25, 13, 12), outcome = structure(c(1L, 2L, 3L, 1L, 2L, 3L, 1L, 2L, 3L), .Label = c("1", "2", "3"), class = "factor"), treatment = structure(c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L), .Label = c("1", "2", "3"), class = "factor")), .Names = c("counts", "outcome", "treatment"), terms = quote(counts ~ outcome + treatment), row.names = c(NA, 9L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(counts ~ group * (city + blood)), drop.unused.levels = TRUE)
retn: structure(list(counts = c(579, 4219, 911, 4578, 246, 3775, 361, 4532, 291, 5261, 396, 6598), group = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("cases", "controls"), class = "factor"), city = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L), .Label = c("London", "Manchester", "Newcastle"), class = "factor"), blood = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("A", "O"), class = "factor")), .Names = c("counts", "group", "city", "blood"
retn: ), terms = quote(counts ~ group * (city + blood)), row.names = c(NA, 12L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(counts ~ group * city + blood), drop.unused.levels = TRUE)
retn: structure(list(counts = c(579, 4219, 911, 4578, 246, 3775, 361, 4532, 291, 5261, 396, 6598), group = structure(c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), .Label = c("cases", "controls"), class = "factor"), city = structure(c(1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L), .Label = c("London", "Manchester", "Newcastle"), class = "factor"), blood = structure(c(1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L), .Label = c("A", "O"), class = "factor")), .Names = c("counts", "group", "city", "blood"
retn: ), terms = quote(counts ~ group * city + blood), row.names = c(NA, 12L), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(freq ~ score), weights = numeric(0), drop.unused.levels = TRUE)
retn: structure(list(freq = numeric(0), score = integer(0), `(weights)` = numeric(0)), .Names = c("freq", "score", "(weights)"), terms = quote(freq ~ score), class = "data.frame")

func: quote(model.frame)
body: function (formula, ...) 
body: UseMethod("model.frame")
args: list(formula = quote(freq ~ score), weights = NaN, drop.unused.levels = TRUE)
retn: structure(list(freq = numeric(0), score = integer(0), `(weights)` = numeric(0)), .Names = c("freq", "score", "(weights)"), terms = quote(freq ~ score), row.names = integer(0), class = "data.frame", na.action = structure(1L, .Names = "1", class = "omit"))

